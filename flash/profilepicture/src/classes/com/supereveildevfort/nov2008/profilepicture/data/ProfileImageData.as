package com.supereveildevfort.nov2008.profilepicture.data {	import flash.events.ErrorEvent;		import flash.events.IOErrorEvent;		import flash.events.Event;		import flash.net.URLLoader;		import flash.net.URLRequestMethod;		import flash.net.URLRequest;		import flash.net.URLVariables;				import flash.events.EventDispatcher; 		/**	 * @class ProfileImageData.as	 * @namespace com.supereveildevfort.nov2008.profilepicture.data	 * @author Niqui Merret	 * @version 1.0	 * @date Nov 26, 2008	 * @description	 * @usage	 * NOTE:	 * TODO:	 *	 */	public class ProfileImageData extends EventDispatcher 	{		private static var mInstance : ProfileImageData;		private static var allowInst : Boolean;		private var mSubmitVariables : URLVariables;		private var mSubmitURL : URLRequest;		private var mSubmitURLLoader : URLLoader;		private var mSubmitURLSrc : String;		public function setURL (pSubmitURLSrc : String) : void		{			mSubmitURLSrc = pSubmitURLSrc;		}						public function saveImage(pSelectedItems : Array) : void		{			trace("saveImage");			mSubmitVariables = new URLVariables();						for (var i : Number = 0; i < pSelectedItems.length; i++) 			{				mSubmitVariables["area_" + pSelectedItems[i].categoryID] = pSelectedItems[i].imageID;				mSubmitVariables.flash = 1;			}						mSubmitURL = new URLRequest(mSubmitURLSrc);			mSubmitURL.method = URLRequestMethod.POST;			mSubmitURL.data = mSubmitVariables;						mSubmitURLLoader = new URLLoader();			mSubmitURLLoader.load(mSubmitURL);			mSubmitURLLoader.addEventListener(IOErrorEvent.IO_ERROR, onLoadError);			mSubmitURLLoader.addEventListener(Event.COMPLETE, onLoadCoplete);		}				private function onLoadCoplete (e : Event) : void		{			trace("complete");			dispatchEvent(new Event(Event.COMPLETE));		}		private function onLoadError (e : IOErrorEvent) : void		{			trace("e.type = " + e.type);			dispatchEvent(new ErrorEvent(ErrorEvent.ERROR));		}		/**		 *********************************************************************************************************************************************************		 * 		 * singleton hack		 * 		 *********************************************************************************************************************************************************		 */		 		 		public function ProfileImageData()		{			if (!allowInst) {	            throw new Error("Error: Instantiation failed: Use ProfileImageData.getInstance() instead of new.");	          }		}					public static function getInstance() : ProfileImageData		{						if (mInstance == null)			{            	allowInst = true;				mInstance = new ProfileImageData();				allowInst = false;				}						return mInstance;					}	}}