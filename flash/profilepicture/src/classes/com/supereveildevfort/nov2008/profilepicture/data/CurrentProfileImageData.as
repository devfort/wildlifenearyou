package com.supereveildevfort.nov2008.profilepicture.data {	import flash.events.Event;			import com.supereveildevfort.nov2008.profilepicture.model.FaceItem;			import br.com.stimuli.loading.BulkErrorEvent;		import br.com.stimuli.loading.BulkProgressEvent;		import br.com.stimuli.loading.BulkLoader;			import flash.events.EventDispatcher; 		/**	 * @class CurrentProfileImageData.as	 * @namespace com.supereveildevfort.nov2008.profilepicture.data	 * @author Niqui Merret	 * @version 1.0	 * @date Nov 27, 2008	 * @description	 * @usage	 * NOTE:	 * TODO:	 *	 */	public class CurrentProfileImageData extends EventDispatcher 	{		private static var mInstance : CurrentProfileImageData;		private static var allowInst : Boolean;		private var mBulkLoader : BulkLoader;		private var mStructure : Array;		private var mURL : String;		public function loadDefault (pURL : String) : void		{			mURL= pURL;			mBulkLoader = new BulkLoader("currentprofile");            mBulkLoader.add(mURL);        	mBulkLoader.addEventListener(BulkProgressEvent.COMPLETE, onAllItemsLoaded);        	mBulkLoader.addEventListener(BulkErrorEvent.ERROR, onLoadError);    		mBulkLoader.start();    					}						public function get structure () : Array		{			return mStructure;		}				private function onLoadError (e : BulkErrorEvent) : void		{						trace(e.errors);						//debug.text = e.errors;					}				private function onAllItemsLoaded (e : BulkProgressEvent) : void		{						trace("XML loaded");			//parse XML						//var imageXML : XML = mBulkLoader.getXML("../../xml/profileimages.xml");			var imageXML : XML = mBulkLoader.getXML(mURL);						mStructure = new Array();						var items:XMLList = imageXML.facepart;			var len:int = items.length();			var i:int;						var faceItem : FaceItem;									for (i = 0; i < len; i++)			{								faceItem = new FaceItem();				faceItem.categoryID = items[i].@area_id;				faceItem.selectedID = items[i].@part_id;				mStructure.push(faceItem);							}						dispatchEvent(new Event(Event.COMPLETE));		}		/**		 *********************************************************************************************************************************************************		 * 		 * singleton hack		 * 		 *********************************************************************************************************************************************************		 */		 		 		public function CurrentProfileImageData()		{			if (!allowInst) {	            throw new Error("Error: Instantiation failed: Use CurrentProfileImageData.getInstance() instead of new.");	          }		}					public static function getInstance() : CurrentProfileImageData		{						if (mInstance == null)			{            	allowInst = true;				mInstance = new CurrentProfileImageData();				allowInst = false;				}						return mInstance;					}	}}