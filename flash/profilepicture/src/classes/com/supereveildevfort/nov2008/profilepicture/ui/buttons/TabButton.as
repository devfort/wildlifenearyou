package com.supereveildevfort.nov2008.profilepicture.ui.buttons {	import com.supereveildevfort.nov2008.profilepicture.ui.RockwellText;		import com.niquimerret.events.InteractionEvent;			import flash.display.Sprite;			import com.niquimerret.accessibility.components.AccessButton;	import flash.utils.getDefinitionByName; 		/**	 * @class TabButton.as	 * @namespace com.supereveildevfort.nov2008.profilepicture.ui.buttons	 * @author Niqui Merret	 * @version 1.0	 * @date Nov 24, 2008	 * @description	 * @usage	 * NOTE:	 * TODO:	 *	 */	public class TabButton extends AccessButton 	{		private var mTab : Sprite;		private var mTabSelected : Sprite;		private var mActive : Boolean;		private var mDisplayLable : RockwellText;		public function TabButton (pLabel : String, pDescription : String = "")		{						super(pLabel, pDescription);						}				/**		*********************************************************************************************************************************************************		* getter and setters		*********************************************************************************************************************************************************		*/				public function get active() : Boolean		{			return mActive;		}				public function set active(pActive : Boolean) : void		{			mActive = pActive;			if (mActive) 			{				mTabSelected.visible = false;				mTab.visible = true;			}			else			{				mTabSelected.visible = true;				mTab.visible = false;			}		}						override protected function init() : void		{						super.init();						mTab = new Sprite();			addChild(mTab);						mTabSelected = new Sprite();			addChild(mTabSelected);						var tabImgC : Class = getDefinitionByName("tab") as Class;			var tabImg : Sprite = new tabImgC() as Sprite; 			mTab.addChild(tabImg); 						var tabSelImgC : Class = getDefinitionByName("tabSelected") as Class;			var tabSel : Sprite = new tabSelImgC() as Sprite; 			mTabSelected.addChild(tabSel);						mDisplayLable = new RockwellText(mLabel);			addChild(mDisplayLable);					}				override protected function clickedAction() : void 		{			active = !mActive;			dispatchEvent(new InteractionEvent(InteractionEvent.CLICKED));		}			}}