package com.supereveildevfort.nov2008.profilepicture.ui {	import fl.transitions.easing.Regular;		import com.gskinner.motion.GTween;			import flash.events.Event;		import flash.display.BitmapData;		import flash.display.Bitmap;	import flash.display.Sprite;	import com.supereveildevfort.nov2008.profilepicture.data.ImageData;	import com.supereveildevfort.nov2008.profilepicture.model.FacePart;import flash.utils.getDefinitionByName;		/**	 * @class PictureDisplay.as	 * @namespace com.supereveildevfort.nov2008.profilepicture.ui	 * @author Niqui Merret	 * @version 1.0	 * @date Nov 24, 2008	 * @description	 * @usage	 * NOTE:	 * TODO:	 *	 */	public class PictureDisplay extends Sprite 	{		private var mElementList : Array;		private var mClearBD : BitmapData;		private var mSaveBar : Sprite;		private var mGtween : GTween;		private var mSaveError : Sprite;		public function PictureDisplay () 		{			init();			}		/**		 *********************************************************************************************************************************************************		 * 		 * public		 * 		 *********************************************************************************************************************************************************		 */		public function setCurrent (pCurrent : Array) : void		{			for (var i : Number = 0;i < mElementList.length; i++) 			{				for (var j : Number = 0;j < pCurrent.length; j++) 				{					if (mElementList[i].categoryID == pCurrent[j].categoryID)					{						mElementList[i].image.bitmapData = pCurrent[j].image.bitmapData;						mElementList[i].selectedID = pCurrent[j].selectedID;					}				}			}		}				public function activateSaveProgress () : void		{						mSaveBar.visible = true;			mGtween.paused = false;			mSaveError.visible = false;		}		public function deactivateSaveProgress () : void		{						mSaveBar.visible = false;			mGtween.paused = true;			mSaveError.visible = false;					}				public function setSaveError () : void		{						mSaveBar.visible = false;			mGtween.paused = true;			mSaveError.visible = true;					}		/**		 *********************************************************************************************************************************************************		 * 		 * getters and setters		 * 		 *********************************************************************************************************************************************************		 */				/*		public function set face(pImage : Bitmap) : void		{		var img : Bitmap = new Bitmap();		mFace.bitmapData = pImage.bitmapData;		}				 * 		 */				public function set element (pFacePart : FacePart) : void		{						mSaveError.visible = false;			for (var i : Number = 0;i < mElementList.length; i++) 			{				if (mElementList[i].categoryID == pFacePart.categoryID)				{					mElementList[i].image.bitmapData = pFacePart.image.bitmapData;					mElementList[i].selectedID = pFacePart.uid;				}			}		}		public function get userImage () : Array		{			var userImageData : Array = new Array();						var item : Object;						for (var i : Number = 0;i < mElementList.length; i++) 			{				item = new Object();				item.categoryID = mElementList[i].categoryID;				item.imageID = mElementList[i].selectedID;				userImageData.push(item);			}			 			return userImageData;			}		/**		 *********************************************************************************************************************************************************		 * 		 * private		 * 		 *********************************************************************************************************************************************************		 */		private function init () : void		{						var bg : Sprite = new Sprite();			addChild(bg);						bg.graphics.beginFill(0xFFFFFF, 1);			bg.graphics.drawRect(0, 0, 175, 175);			bg.graphics.endFill();									mClearBD = new BitmapData(175, 175, true, 0x00000000);						mElementList = ImageData.getInstance().structure;			var elements : Bitmap;						for (var i : Number = 0;i < mElementList.length; i++) 			{								elements = new Bitmap();				addChild(elements);				mElementList[i].image = elements;				mElementList[i].selectedID = 0;			}						mSaveBar = new Sprite();			addChild(mSaveBar);						mSaveBar.graphics.beginFill(0x251883, 1);			mSaveBar.graphics.drawRect(0, 175, 175, 3);			mSaveBar.graphics.endFill();			mSaveBar.visible = false;			mSaveBar.scaleX = 0;						mGtween = new GTween(mSaveBar, 1.5, {scaleX : 1});			mGtween.ease = Regular.easeOut;						mGtween.nextTween = mGtween;			mGtween.paused = true;						mSaveError = new Sprite();			addChild(mSaveError);						var saveErrorC : Class = getDefinitionByName("saveError") as Class;			var saveError : Sprite = new saveErrorC() as Sprite; 			mSaveError.addChild(saveError);						mSaveError.visible = false;		}				public function clearCurrent (pName : String) : void		{			for (var i : Number = 0;i < mElementList.length; i++) 			{				if (mElementList[i].name == pName)				{					mElementList[i].image.bitmapData = mClearBD;					mElementList[i].selectedID = 0;				}			}					}	}}